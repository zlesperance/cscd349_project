<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.2">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>196</x>
      <y>763</y>
      <w>322</w>
      <h>294</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
Character
--
-healthPoints: int
-game: Game
#skills: SkillSet
--
#&lt;&lt;contructor&gt;&gt;Character(String skills)
+selectionAction(Party allies, Party enemies, Engagement engagement)
+receiveDamage(int damage): void
#receiveDirectDamage(int damage): void
-tryBlock(): boolean
-tryDodge(): boolean
+healDamage(int healAmount): void
+getHP(): int
+getBaseHP(): int
+getStrength(): int
+getDexterity(): int
+getIntelligence(): int
+getVitality(): int
+getAgility(): int
+getLuck(): int
+getSpeed(): int
-die(): void
+isDead(): boolean
+attack(Character foe): void
+toString(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>560</x>
      <y>539</y>
      <w>385</w>
      <h>441</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
Protagonist
--
-name: String
-weapon: Weapon
-offhand: Shield
-energy: int
-game: Game
--
#&lt;&lt;constructor&gt;&gt;Protagonist(String name, String skills)
+equipWeapon(Weapon weapon): void
+equipOffhand(Shield offhand): void
#refresh(): void
#getItemEnergy(): int
+attack(Antagonist enemy): void
+selectAction(Party allies, Party enemies, Engagement engagement): void
+useItem(): void
+levelUp(): void
+getName(): String
#isValidTarget(): boolean
+getBaseHP(): int
+getStrength(): int
+getDexterity(): int
+getIntelligence(): int
+getVitality(): int
+getAgility(): int
+getLuck(): int
#getHealthModifier(): int
#getStrengthModifier(): int
#getDexterityModifier(): int
#getIntelligenceModifier(): int
#getVitalityModifier(): int
#getAgilityModifier(): int
#getLuckModifier(): int
#beginTurnHook(): void
#getActions(): String[]
#performAction(int index, Party allies, Party enemies, Engagement engagement): void
#selectionStopsAction(int index): void
#canPerformAnyAction(): boolean
#endHook(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>560</x>
      <y>1015</y>
      <w>329</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
Antagonist
--
-name: String
-description: String
--
+&lt;&lt;constructor&gt;&gt;Antagonist(String name, String description, String skills)
+attack(Protagonist enemy): void
+examine(): String
+getStrength(): int
+getDexterity(): int
+getIntelligence(): int
+getVitality(): int
+getAgility(): int
+getLuck(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>119</x>
      <y>1092</y>
      <w>413</w>
      <h>259</h>
    </coordinates>
    <panel_attributes>SkillSet
--
-strength: int
-agility: int
-vitality: int
-intelligence: int
-dexterity: int
-luck: int
--
+&lt;&lt;constructor&gt;&gt;SkillSet(int strength, int agility, int vitality, int intelligence, int dexterity, int luck)
+raiseStrength(): void
+raiseAgility(): void
+raiseVitality(): void
+raiseIntelligence(): void
+raiseDexterity(): void
+raiseLuck(): void
+getBaseHP(): int
+getStrength(): int
+getAgility(): int
+getVitality(): int
+getDexterity(): int
+getIntelligence(): int
+getLuck(): int
_+buildSkills(String skills): SkillSet_
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>994</x>
      <y>238</y>
      <w>378</w>
      <h>308</h>
    </coordinates>
    <panel_attributes>Fighter
--
-isBlocking: boolean
-actions: String[]
-game: Game
--
+&lt;&lt;constructor&gt;&gt;Fighter(String name)
#getHealthModifier(): int
#getStrengthModifier(): int
#getDexterityModifier(): int
#getIntelligenceModifier(): int
#getVitalityModifier(): int
#getAgilityModifier(): int
#getLuckModifier(): int
+attack(Antagonist foe): void
-specialAttack(Party foes): void
-block(): void
-getAttackEnergy(): void
-getBlockEnergy(): void
-getSpecialEnergy(): void
+receiveDamage(int damage): void
+getActions(): String[]
#beginTurnHook(): void
#performAction(int index, Party allies, Party enemies, Engagement engagement): void
#selectionStopsAction(int index): boolean
#canPerformAnyAction(): boolean
+toString(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>994</x>
      <y>602</y>
      <w>161</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>Mancer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>952</x>
      <y>1015</y>
      <w>336</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Slime
--
-game: Game
--
+&lt;&lt;contructor&gt;&gt;Slime()
+&lt;&lt;contructor&gt;&gt;Slime(String name)
+attack(Protagonist enemy): void
+selectAction(Party allies, Party enemies, Engagement engagement): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>952</x>
      <y>1120</y>
      <w>161</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>Goblin</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>938</x>
      <y>539</y>
      <w>266</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;50.0;360.0;50.0;360.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>938</x>
      <y>567</y>
      <w>147</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;10.0;190.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>938</x>
      <y>567</y>
      <w>546</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;760.0;10.0;760.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>511</x>
      <y>700</y>
      <w>63</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;150.0;50.0;150.0;50.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>511</x>
      <y>798</y>
      <w>63</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0;50.0;380.0;70.0;380.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>336</x>
      <y>1050</y>
      <w>21</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>231</x>
      <y>588</y>
      <w>245</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>Party
--
-members: PriorityQueue&lt;Character&gt;
-game: Game
--
+&lt;&lt;constructor&gt;&gt;Party(Character[] members)
+addMember(Character member): void
+removeMember(Character member): void
+isDefeated(): boolean
+iterator(): Iterator&lt;Character&gt;
+selectCharacter(): Character
+selectCharacter(CharacterTester tester): Character
+selectRandomCharacter(): Character
+selectRandomLivingCharacter(): Character</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>63</x>
      <y>399</y>
      <w>343</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>Engagement
--
-partyA: Party
-partyB: Party
-ended: boolean
-escapable: boolean
-game: Game
--
+&lt;&lt;constructor&gt;&gt;Engagement(Party partyA, Party partyB)
+&lt;&lt;constructor&gt;&gt;Engagement(Party partyA, Party partyB, boolean escapable)
+begin(): void
+end(): void
+tryFlee(): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>336</x>
      <y>532</y>
      <w>21</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>168</x>
      <y>532</y>
      <w>42</w>
      <h>294</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>40.0;400.0;10.0;400.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>539</x>
      <y>469</y>
      <w>266</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>SpeedComparator
--
+compare(Character characterA, Character characterB): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>21</x>
      <y>868</y>
      <w>140</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
CharacterTester
--
+test(): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>336</x>
      <y>728</y>
      <w>21</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>427</x>
      <y>476</y>
      <w>126</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;160.0;10.0;10.0;160.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>154</x>
      <y>875</y>
      <w>56</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1015</y>
      <w>140</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
DeadCharacterTester
--
+test(): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>952</y>
      <w>140</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
LivingCharacterTester
--
+test(): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>133</x>
      <y>903</y>
      <w>28</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>20.0;10.0;20.0;100.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>133</x>
      <y>903</y>
      <w>28</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>20.0;10.0;20.0;190.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1386</x>
      <y>238</y>
      <w>378</w>
      <h>308</h>
    </coordinates>
    <panel_attributes>Fencer
--
-isBlocking: boolean
-parryCount: int
-actions: String[]
-game: Game
--
+&lt;&lt;constructor&gt;&gt;Fencer(String name)
#getHealthModifier(): int
#getStrengthModifier(): int
#getDexterityModifier(): int
#getIntelligenceModifier(): int
#getVitalityModifier(): int
#getAgilityModifier(): int
#getLuckModifier(): int
+attack(Antagonist foe): void
-specialAttack(Party foes): void
-block(): void
-getAttackEnergy(): void
-getBlockEnergy(): void
-getSpecialEnergy(): void
+receiveDamage(int damage): void
+getActions(): String[]
#beginTurnHook(): void
#performAction(int index, Party allies, Party enemies, Engagement engagement): void
#selectionStopsAction(int index): boolean
#canPerformAnyAction(): boolean
+toString(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>938</x>
      <y>539</y>
      <w>623</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;50.0;870.0;50.0;870.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>602</x>
      <y>91</y>
      <w>252</w>
      <h>217</h>
    </coordinates>
    <panel_attributes>Game
--
_-instance: Game_
-active: boolean
-rng: Random
-kb: Scanner
-inventory: Inventory
-gameClient: GameClient
--
-Game(): ctor
_+getInstance(): Game_
+registerGameClient(GameClient gameClient)
+makeSelection(String... options): int
+report(String message): void
+reportLocation(int x, int y): void
+openInventory(): void
+openMap(): void
+nextRandom(): double
-checkGameActive(): void
+end(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1386</x>
      <y>602</y>
      <w>378</w>
      <h>308</h>
    </coordinates>
    <panel_attributes>Hunter
--
-isAiming: boolean
-target: Character
-actions: String[]
-game: Game
--
+&lt;&lt;constructor&gt;&gt;Hunter(String name)
#getHealthModifier(): int
#getStrengthModifier(): int
#getDexterityModifier(): int
#getIntelligenceModifier(): int
#getVitalityModifier(): int
#getAgilityModifier(): int
#getLuckModifier(): int
+attack(Antagonist foe): void
-specialAttack(Character foe): void
-aim(Character foe): void
-getAttackEnergy(): void
-getAimEnergy(): void
-getSpecialEnergy(): void
+receiveDamage(int damage): void
+getActions(): String[]
#beginTurnHook(): void
#performAction(int index, Party allies, Party enemies, Engagement engagement): void
#selectionStopsAction(int index): boolean
#canPerformAnyAction(): boolean
+toString(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>882</x>
      <y>1043</y>
      <w>84</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>882</x>
      <y>1043</y>
      <w>84</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0;50.0;130.0;100.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>266</x>
      <y>21</y>
      <w>252</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
GameClient
--
+makeSelection(String... options): int
+openInventory(Inventory inventory): Item
+openCharacterSelect(): Party
+openMap(Maze map): void
+openEngagement(Engagement engagement): void
+report(String string): void
+end(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>511</x>
      <y>105</y>
      <w>105</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>833</x>
      <y>63</y>
      <w>56</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>30.0;60.0;60.0;60.0;60.0;10.0;10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>511</x>
      <y>203</y>
      <w>105</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>224</x>
      <y>161</y>
      <w>294</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
ConsoleGameClient
--
-kb: Scanner
--
+ConsoleGameClient(): ctor
+makeSelection(String... options): int
+openInventory(Inventory inventory): Item
-printInventoryScreen(LinkedList&lt;Item&gt; tab, int tabIndex): void
+openCharacterSelect(): Party
+openMap(Maze map): void
+openEngagement(Engagement engagement): void
+report(String string): void
+end(): void</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
